options {
   blocksize 1000        ; number of events to process in one go. Should be set to a value s.t. it takes ~O(1) seconds to process.
                ; Ignored in local mode.
   output_dir . ; directory to write the result root files to. Each job uses output-dir/unmerged-${dataset.name}-${ijob}.root as the output rootfile
                ; merged final result will be in output-dir/${datasetname}.root.
                ; For local mode, output is written directly to output-dir/${datasetname}.root
   library libzsvanalysis.so ; library to load. This will be searched in: the current directory and where the executable is located plus exepath../lib/
                             ; more than one "library" statement is possible: the libraries will be loaded in order.
   
   searchpath /afs/desy.de/user/o/ottjoc/xxl-af-cms/zsv-cmssw/CMSSW_5_3_14_patch2/ ; where to look for files (including libraries). More than one 'searchpath' statement is possible.
   
   ; debugging options:
   ; keep_unmerged true ; keep unmerged-files (in addition to the merged one).
   ; maxevents_hint 1000        ; ~maximum number of events to process. Note that the actual number of processed events might be even
                              ; smaller if a file of unknown size ends 'suddenly'.
}


;dataset {
;   name dy ; dataset name; will be used in output filename
;   treename ZSVA/event ; name of the input event tree in the root file name
;   tags {
;      ; tags are completely user-defined key/value pairs with a unique key
;      ; they can be used in AnalysisModule::begin_dataset to make dataset-specific decisions / initializations.
;      ; Examples for useful tags are :
;      lumi 8624.1
;      is_real_data false
;   }
;   
;   ; provide file/file-pattern/sframe-xml-file statements to define which files belong to this dataset (more than one statement is possible in all cases):
;   file-pattern /nfs/dust/cms/user/ottjoc/gc-output/zplusjets-ntuple/ntuple/dyjets50*.root
;   
   ;file {
   ;  path /path/to/rootfile.root
   ;  nevents 1000 ; total number of events in file. Optional, default is auto-detect.
   ;  skip 200 ; skip first 200 events. Useful mainly for testing / debugging.
   ;}
   
   ; sframe-xml-file /afs/naf.desy.de/user/j/jott/SFrame/SFrameAnalysis/config/Samples_TTBSM53/TT_Powheg.xml  ; NOTE: does not do full xml parsing, just uses the file name of all lines with 'FileName=...'
   
   ; /DYJetsToLL_M-50_TuneZ2Star_8TeV-madgraph-tarball/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM
   ; nevents: 30,459,503
   ; cross-section: 1177.3pb per lepton -> 3531.9pb total
;}

#include "ttbar.cfg"
#include "dmu.cfg"

#include "dyjets_incl.cfg"
#include "dyjets_excl.cfg"

modules {
    ; run these modules, in the order specified here
    setup_intree {
       type zsvtree
    }
    
    filter_duplicates {
       type dcheck
    }
    
    muscale {
       type muscale
    }
    
    zp4 {
      type calc_zp4
    }
    
    filterdyincl {
       type filter_n_me_fs
       dy {
          nmin 2
          nmax 2
       }
    }
    
    mcweight { ; the name here is a user-defined name. It will be used in error messages.
      type mcweight ; type name must match the C++ class name
      ; more options can be set here; they are completely user-defined.
      target_lumi 19700.
    }
    
    sf {
       type dimusf
    }
    
    ; compute selections:
    sels {
        type Selections
        all {
            type PassallSelection
        }
        ;bcand_ge1 {
        ;    type NBCandSelection
        ;    nmin 1
        ;}
        bcand2 {
            type NBCandSelection
            nmin 2
            nmax 2
        }
        mll {
            type MllSelection
            mllmin 81
            mllmax 101
        }
        mllinvert {
            type AndNotSelection
            selections mll
        }
        met {
           type MetSelection
           metmax 50
           metmin -1
        }
        metinvert {
           type AndNotSelection
           selections met
        }
        mllinvert_metinvert {
            type AndSelection
            selections "mllinvert metinvert"
        }
        final {
            type AndSelection
            selections "bcand2 mll met"
            cutflow_hname "cutflow" ; save as cutflow histogram
        }
        final_mllinvert_premet {
           type AndSelection
           selections "bcand2 mllinvert"
        }
        final_mllinvert_metinvert {
           type AndSelection
           selections "bcand2 metinvert mllinvert"
        }
    }
    
    ; fill histograms, using the selections:
    histos {
       type HistFiller
       all {
          hists BaseHists   ; short for hists { type BaseHists }
       }
       final_mllinvert_premet {
          hists BaseHists
          hists BcandHists
       }
       final_mllinvert_metinvert {
          hists BaseHists
          hists BcandHists
       }
       final {
          hists BaseHists
          hists BcandHists
       }
    }
}
