options {
   blocksize 20000
   output_dir /nfs/dust/cms/user/ottjoc/omega-out/ntuple-latest/recoplots
   library libzsvanalysis.so
   searchpath /afs/desy.de/user/o/ottjoc/xxl-af-cms/zsv-cmssw/CMSSW_5_3_14_patch2/
   ;maxevents_hint 1000
   default_treename ZSVA/event
}

logger {
    "" {
       threshold INFO
    }
}

#include "datasets/all-after-splitting.cfg"

modules {
   #include "common_modules.icfg"
    
    ; compute selections:
    sels {
        type Selections
        all {
            type PassallSelection
        }
        mll55 {
           type MllSelection
           mllmin 55
        }
        lepton_triggermatch {
            type LeptonTriggerMatchSelection
        }
        ; NOTE: we do NOT ask for a trigger match right now (does not work for e-mu cross-trigger).
        presel {
            type AndSelection
            selections "cleaning lepton_offline lepton_trigger mll55"
            cutflow_hname cutflow_presel
        }
        ;presel_sf { ; preselection for same-flavor leptons: add cut on mll
        ;    type AndSelection
        ;    selections "presel mll65"
        ;}
        bcand2 {
            type NBCandSelection
            nmin 2
            nmax 2
        }
        bc1 {
            type NBCandSelection
            nmin 1
            nmax 1
        }
        mll {
            type MllSelection
            mllmin 71
            mllmax 111
        }
        mllinvert {
            type AndNotSelection
            selections mll
        }
        met {
           type MetSelection
           metmax 50
           metmin -1
        }
        metinvert {
           type AndNotSelection
           selections met
        }
        ;hard_leptons {
        ;    type HardLeptonSelection
        ;}
        ee {
            type LeptonFlavorSelection
            select_flavor ee
        }
        mm {
            type LeptonFlavorSelection
            select_flavor mm
        }
        me {
            type LeptonFlavorSelection
            select_flavor me
        }
        presel_ee {
            type AndSelection
            selections "presel ee"
        }
        presel_mm {
            type AndSelection
            selections "presel mm"
        }
        presel_me {
            type AndSelection
            selections "presel me"
        }

        ; the final selections for analysis or for control regions:
        ; ee:
        fs_ee_bc2_mll_met { ; final selection for analysis
            type AndSelection
            selections "presel_ee bcand2 mll met"
            cutflow_hname "cutflow_ee" ; save as cutflow histogram
        }
        fs_ee_bc2_mll { ; no MET: study MET cut impact
            type AndSelection
            selections "presel_ee bcand2 mll"
        }
        fs_ee_bc1_mll {
            type AndSelection
            selections "presel_ee bc1 mll"
        }
        fs_ee_bc2_mlli { ; mll control region
           type AndSelection
           selections "presel_ee bcand2 mllinvert"
        }

        ; mumu:
        fs_mm_bc2_mll_met { ; final selection for analysis
            type AndSelection
            selections "presel_mm bcand2 mll met"
            cutflow_hname "cutflow_mm" ; save as cutflow histogram
        }
        fs_mm_bc2_mll { ; no MET: study MET cut impact
            type AndSelection
            selections "presel_mm bcand2 mll"
        }
        fs_mm_bc1_mll {
            type AndSelection
            selections "presel_mm bc1 mll"
        }
        fs_mm_bc2_mlli { ; mll control region
           type AndSelection
           selections "presel_mm bcand2 mllinvert"
        }

        ; mu-e:
        ;fs_me_bc2_mll_met { ; final selection for analysis
        ;    type AndSelection
        ;    selections "presel_me bcand2 mll met"
        ;    cutflow_hname "cutflow_me" ; save as cutflow histogram
        ;}
        fs_me_bc2_mll {
            type AndSelection
            selections "presel_me bcand2 mll"
        }
        fs_me_bc2_mlli {
           type AndSelection
           selections "presel_me bcand2 mllinvert"
        }
        fs_me_bc2 { ; just two leptons, and only weak requirements for mll_min: good for e-mu
            type AndSelection
            selections "presel_me bcand2"
        }
        fs_me_bc1 {
            type AndSelection
            selections "presel_me bc1"
        }
    }
    
    ; fill histograms, using the selections:
    histos {
       type HistFiller
       mm {
           hists TriggerHists
       }
       me {
           hists TriggerHists
       }
       ee {
           hists TriggerHists
       }
       all {
           hists BaseHists ; among others for pileup control histo: should have mean = 1.0 for dy sample in which all gen events survive
       }

       ; for presel mm, make some systematics histos:
       presel_mm {
          hists {
             type BaseHists
             systs "musf_id musf_iso musf_trigger"
          }
          hists BcandHists
       }

       _cfg { ; directory configuration for next "_dirs" config
          hists BaseHists
          hists BcandHists
          ; hists BcandMistagHists
          hists JetHists
       }
       ; _dirs: shortcut to create many selection directories with the same configuration (last value of _cfg) at once
       _dirs "fs_me_bc2_mll fs_me_bc2_mlli fs_me_bc2 fs_me_bc1"
       _dirs "fs_mm_bc2_mll_met fs_mm_bc2_mll fs_mm_bc2_mlli fs_mm_bc1_mll"
       _dirs "presel_ee fs_ee_bc2_mll_met fs_ee_bc2_mll fs_ee_bc2_mlli fs_ee_bc1_mll"
       ; also make jet hists for some me channels:
       ;_cfg {
       ;     hists BaseHists
       ;     hists JetHists
       ;}
       _dirs "presel_me"
    }

    ;stop {
    ;    type stop_unless
    ;    selection fs_bc2_mll_met
    ;}
}
